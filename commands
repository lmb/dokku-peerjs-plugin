#!/bin/bash
set -e;

APP=$2

PLUGIN_NAME="peerjs"
CONTAINER_IMAGE="peerjs-server"
CONTAINER_NAME="${PLUGIN_NAME}"
PEERJS_PORT=9000

check_container() {
  if [[ -z "$id" ]]; then
    echo "PeerJS container not started cannot continue. Start with dokku peerjs:start"
    exit 1
  fi
}

id=$(docker ps | grep "$CONTAINER_NAME" |  awk '{print $1}')

case "$1" in
  peerjs:start)
    if [[ "$id" != "" ]]; then
        echo "PeerJS container already running with ID: ${id}"
    else
        image=$(docker images | grep "$CONTAINER_IMAGE" |  awk '{print $3}')
        if [[ -z $image ]]; then
            echo "PeerJS image not found... Did you run 'dokku plugins-install' ?"
            exit 1
        fi
        container=$(docker ps -a | grep "$CONTAINER_NAME" | awk '{print $1}')
        image=$(docker ps -a | grep "$CONTAINER_NAME" | awk '{print $2}')
        if [[ ! -z $container ]]; then
          if [[ "$CONTAINER_IMAGE" != "$image" ]]; then
            echo "Container outdated, rebuilding"
            docker rm $container > /dev/null
            dokku peerjs:start
            exit 0
          else
            id=$container
            docker start "$id" > /dev/null
          fi
        else
          # Launch container
          id=$(docker run -p $PEERJS_PORT:$PEERJS_PORT --name $CONTAINER_NAME -d $CONTAINER_IMAGE /usr/bin/start-peerjs-server.sh)
        fi
        echo "-----> PeerJS container started: $CONTAINER_NAME (ID: ${id})"
    fi
    ;;
  peerjs:stop)
    check_container
    docker stop ${id} > /dev/null
    echo "PeerJS container stopped"
    ;;
  peerjs:restart)
    dokku peerjs:stop
    dokku peerjs:start
    ;;
  peerjs:status)
    if [[ "$id" != "" ]]; then
      echo "PeerJS container running with ID: ${id}"
    else
      echo "PeerJS container not running"
    fi
    ;;
  peerjs:help)
    cat && cat<<EOF
    peerjs:start         Start the peerjs docker container if it isn't running
    peerjs:stop          Stop the peerjs docker container
    peerjs:restart       Restart the peerjs docker container
    peerjs:status        Shows status of peerjs
EOF
    ;;
esac
